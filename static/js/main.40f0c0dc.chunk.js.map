{"version":3,"sources":["components/Intro.tsx","svg-icons/GithubIcon.tsx","components/Toolbar.tsx","components/Profile.tsx","App.tsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","container","width","display","justifyContent","alignItems","marginBottom","spacing","flexWrap","profileImgPaper","borderRadius","height","overflow","position","margin","profileImg","top","left","textContainer","padding","Intro","classes","react_default","a","createElement","className","Paper","elevation","src","Typography","variant","gutterBottom","color","GithubIcon","props","SvgIcon","d","actionsContainer","Toolbar","Link","href","target","Tooltip","title","enterDelay","IconButton","svg_icons_GithubIcon","background","palette","secondary","main","contrastText","paddingLeft","paddingRight","paddingTop","paddingBottom","maxWidth","Profile","link","createMuiTheme","primary","App","ThemeProvider","components_Toolbar","components_Intro","components_Profile","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40f0c0dc.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: theme.spacing(10),\n    flexWrap: 'wrap'\n  },\n  profileImgPaper: {\n    borderRadius:'50%',\n    height: 200,\n    width: 200,\n    overflow: 'hidden',\n    position: 'relative',\n    margin: 20\n  },\n  profileImg: {\n    width: 286,\n    position: 'absolute',\n    top: -60,\n    left: -36\n  },\n  textContainer: {\n    padding: '20px 40px'\n  }\n}))\n\nconst Intro = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.container}>\n      <Paper className={classes.profileImgPaper} elevation={10}>\n        <img src='Profile.png' className={classes.profileImg} />\n      </Paper>\n      <div className={classes.textContainer}>\n        <Typography variant='body1' gutterBottom color='textSecondary'>\n          Welcome! I am\n        </Typography>\n        <Typography variant='h3' gutterBottom color='primary'>\n          Catherine Thompson\n        </Typography>\n        <Typography variant='h5' gutterBottom>\n          Software Developer\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nexport default Intro","import React from 'react'\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon'\n\nconst GithubIcon = (props: SvgIconProps) =>\n  <SvgIcon {...props}>\n    <path d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\n  </SvgIcon>\n\nexport default GithubIcon","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GithubIcon from '../svg-icons/GithubIcon'\nimport Link from '@material-ui/core/Link'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: theme.spacing(8)\n  },\n  actionsContainer: {\n    padding: theme.spacing(1)\n  }\n}))\n\nconst Toolbar = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.container}>\n      <div className={classes.actionsContainer}>\n        <Link href='https://github.com/CatherineThompson/home' target='_blank'>\n          <Tooltip title='GitHub repo' enterDelay={500} color='primary' >\n            <IconButton>\n              <GithubIcon />\n            </IconButton>\n          </Tooltip>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Toolbar","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nconst profileText = `\n  I am a full-stack software engineer with an emphasis on front-end web development. \n  My daily goals include writing clean, readable, well-designed code within the functional programming paradigm. \n  This site is written with a React + Typescript stack.\n`\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    background: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    display: 'flex', \n    justifyContent: 'center',\n    marginBottom: theme.spacing(10)\n  },\n  textContainer: {\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(6),\n    maxWidth: 1000\n  }\n}))\n\nconst Profile = () => {\n  const classes = useStyles()\n  const link = (\n    <Link href='https://github.com/CatherineThompson/home' target='_blank'>\n      GitHub\n    </Link>\n  )\n  return (\n    <div className={classes.container}>\n      <div className={classes.textContainer}>\n        <Typography variant='body1' color='inherit'>\n          { profileText } The source code can be found on {link}. Welcome to my website!\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile","import React from 'react'\nimport './App.css'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport Intro from './components/Intro'\nimport Toolbar from './components/Toolbar'\nimport Profile from './components/Profile'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#870d4c'\n    },\n    secondary: {\n      main: '#01579b'\n    }\n  }\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Toolbar />\n      <Intro />\n      <Profile />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}